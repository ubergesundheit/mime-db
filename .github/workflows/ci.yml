name: ci

on:
- pull_request
- push

jobs:
  test:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        name:
        - Node.js 0.6
        - Node.js 0.8
        - Node.js 0.10
        - Node.js 0.12
        - io.js 1.x
        - io.js 2.x
        - io.js 3.x
        - Node.js 4.x
        - Node.js 5.x
        - Node.js 6.x
        - Node.js 7.x
        - Node.js 8.x
        - Node.js 9.x
        - Node.js 10.x
        - Node.js 11.x
        - Node.js 12.x
        - Node.js 13.x
        - Node.js 14.x
        - Node.js 15.x
        - Node.js 16.x

        include:
        - name: Node.js 0.6
          node-version: "0.6"
          npm-i: mocha@1.21.5
          npm-rm: nyc

        - name: Node.js 0.8
          node-version: "0.8"
          npm-i: mocha@2.5.3
          npm-rm: nyc

        - name: Node.js 0.10
          node-version: "0.10"
          npm-i: mocha@3.5.3
          npm-rm: nyc

        - name: Node.js 0.12
          node-version: "0.12"
          npm-i: mocha@3.5.3
          npm-rm: nyc

        - name: io.js 1.x
          node-version: "1.8"
          npm-i: mocha@3.5.3
          npm-rm: nyc

        - name: io.js 2.x
          node-version: "2.5"
          npm-i: mocha@3.5.3
          npm-rm: nyc

        - name: io.js 3.x
          node-version: "3.3"
          npm-i: mocha@3.5.3
          npm-rm: nyc

        - name: Node.js 4.x
          node-version: "4.9"
          npm-i: mocha@5.2.0
          npm-rm: nyc

        - name: Node.js 5.x
          node-version: "5.12"
          npm-i: mocha@5.2.0
          npm-rm: nyc

        - name: Node.js 6.x
          node-version: "6.17"
          npm-i: mocha@6.2.2
          npm-rm: nyc

        - name: Node.js 7.x
          node-version: "7.10"
          npm-i: mocha@6.2.2
          npm-rm: nyc

        - name: Node.js 8.x
          node-version: "8.17"
          npm-i: mocha@7.2.0

        - name: Node.js 9.x
          node-version: "9.11"
          npm-i: mocha@7.2.0

        - name: Node.js 10.x
          node-version: "10.24"

        - name: Node.js 11.x
          node-version: "11.15"

        - name: Node.js 12.x
          node-version: "12.22"

        - name: Node.js 13.x
          node-version: "13.14"

        - name: Node.js 14.x
          node-version: "14.17"

        - name: Node.js 15.x
          node-version: "15.14"

        - name: Node.js 16.x
          node-version: "16.1"

    steps:
    - uses: actions/checkout@v2

    - name: Install Node.js ${{ matrix.node-version }}
      shell: bash -eo pipefail -l {0}
      run: |
        sudo apt-get install valgrind
        if [[ "${{ matrix.node-version }}" == 0.6* ]]; then
          sudo apt-get install g++-5 gcc-5
          export CC=/usr/bin/gcc-5
          export CXX=/usr/bin/g++-5
          export CXXCOM='$CXX -o $TARGET -c $CXXFLAGS $CCFLAGS -Wno-unused-local-typedefs -Wno-maybe-uninitialized -Wno-narrowing -Wno-strict-overflow -Wno-unused-variable $_CCCOMCOM $SOURCES'
          wget https://www.openssl.org/source/old/1.0.1/openssl-1.0.1u.tar.gz
          tar xzf openssl-1.0.1u.tar.gz
          (cd openssl-1.0.1u; ./config --prefix=/opt/openssl/1.0.1u; make; sudo make install_sw)
          export CXXFLAGS="$CXXFLAGS -I/opt/openssl/1.0.1u/include"
          export LDFLAGS="$LDFLAGS -L/opt/openssl/1.0.1u/lib -Wl,-rpath,/opt/openssl/1.0.1u/lib"
        fi
        nvm install --default ${{ matrix.node-version }}
        if [[ "${{ matrix.node-version }}" == 0.* ]]; then
          npm config set strict-ssl false
        fi
        node -pe process.versions
        ldd $(which node)
        dirname "$(nvm which ${{ matrix.node-version }})" >> "$GITHUB_PATH"

    - name: Configure npm
      run: npm config set shrinkwrap false

    - name: Remove non-test npm modules
      run: npm rm --silent --save-dev bluebird co cogent csv-parse gnode raw-body stream-to-array

    - name: Remove npm module(s) ${{ matrix.npm-rm }}
      run: npm rm --silent --save-dev ${{ matrix.npm-rm }}
      if: matrix.npm-rm != ''

    - name: Install npm module(s) ${{ matrix.npm-i }}
      run: valgrind npm install --save-dev ${{ matrix.npm-i }}
      if: matrix.npm-i != ''

    - name: Setup Node.js version-specific dependencies
      shell: bash
      run: |
        # eslint for linting
        # - remove on Node.js < 10
        if [[ "$(cut -d. -f1 <<< "${{ matrix.node-version }}")" -lt 10 ]]; then
          node -pe 'Object.keys(require("./package").devDependencies).join("\n")' | \
            grep -E '^eslint(-|$)' | \
            sort -r | \
            xargs -n1 npm rm --silent --save-dev
        fi

    - name: Install Node.js dependencies
      run: npm install

    - name: List environment
      id: list_env
      shell: bash
      run: |
        echo "node@$(node -v)"
        echo "npm@$(npm -v)"
        npm -s ls ||:
        (npm -s ls --depth=0 ||:) | awk -F'[ @]' 'NR>1 && $2 { print "::set-output name=" $2 "::" $3 }'

    - name: Run tests
      shell: bash
      run: |
        if npm -ps ls nyc | grep -q nyc; then
          npm run test-ci
        else
          npm test
        fi

    - name: Lint code
      if: steps.list_env.outputs.eslint != ''
      run: npm run lint

    - name: Collect code coverage
      uses: coverallsapp/github-action@master
      if: steps.list_env.outputs.nyc != ''
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        flag-name: run-${{ matrix.test_number }}
        parallel: true

  coverage:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Uploade code coverage
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.github_token }}
        parallel-finished: true
